{% extends "base.html.twig" %}

{% block body %}
<script src="https://js.stripe.com/v3/"></script>

<h5 class="center">Informations de la carte de paiement</h5>
</br>
<div class="row">
    <div class="col s6 offset-s3">

        <div id="anchor" class="z-depth-1 margin-x">
        {% for message in app.flashes('stripe') %}

            <div class="flash-error">
                {{ message }}
            </div>
            
        {% endfor %}
        </div>

        <form action="{{ path('payment_charge', {'order': order.id}) }}" method="post" id="payment-form">
            <input type="hidden" name="api-id" value="{{ order.apiId }}">
            <input type="hidden" name="amount" value="{{ order.product.reducedPrice }}">
            <label for="card-element">
              Carte bancaire
            </label>
            <div id="card-element">
            <!-- A Stripe Element will be inserted here. -->
            </div>
            </br>
            <div class="input-field col s12 l6">
                <a href="#!" class="btn-large btn-block waves-effect waves-light grey">Annuler</a>
            </div>
            <div class="input-field col s12 l6">

                <button class="btn-large btn-block waves-effect waves-light" name="action" type="submit">Payer maintenant</button>
                 
            </div>
        </form>
    </div>
</div>

{% endblock %}

{% block javascripts %}

<script>

// Create a Stripe client.
var stripe = Stripe('pk_test_KmhVHUX90CP3CCP5x8D0xzkH00OPyH176V');

// Create an instance of Elements.
var elements = stripe.elements();

// Custom styling can be passed to options when creating an Element.
// (Note that this demo uses a wider set of styles than the guide below.)
var style = {
  base: {
    color: '#32325d',
    fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
    fontSmoothing: 'antialiased',
    fontSize: '16px',
    '::placeholder': {
      color: '#aab7c4'
    }
  },
  invalid: {
    color: '#fa755a',
    iconColor: '#fa755a'
  }
};

// Create an instance of the card Element.
var card = elements.create('card', {style: style});

// Add an instance of the card Element into the `card-element` <div>.
card.mount('#card-element');

// Handle real-time validation errors from the card Element.
card.addEventListener('change', function(event) {
  var displayError = document.getElementById('card-errors');
  if (event.error) {
    displayError.textContent = event.error.message;
  } else {
    displayError.textContent = '';
  }
});

// Handle form submission.
var form = document.getElementById('payment-form');
form.addEventListener('submit', function(event) {
  event.preventDefault();

  stripe.createToken(card).then(function(result) {
    if (result.error) {
      // Inform the user if there was an error.
      var errorElement = document.getElementById('card-errors');
      errorElement.textContent = result.error.message;
    } else {
      // Send the token to your server.
      stripeTokenHandler(result.token);
    }
  });
});

// Submit the form with the token ID.
function stripeTokenHandler(token) {
  // Insert the token ID into the form so it gets submitted to the server
  var form = document.getElementById('payment-form');
  var hiddenInput = document.createElement('input');
  hiddenInput.setAttribute('type', 'hidden');
  hiddenInput.setAttribute('name', 'stripeToken');
  hiddenInput.setAttribute('value', token.id);
  form.appendChild(hiddenInput);

  // Submit the form
  form.submit();
}

</script>

{% endblock %}